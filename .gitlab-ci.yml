stages:
  - build
  - test
  - deploy

default:
  image: "coderus/sailfishos-platform-sdk:${SFOS_VERSION}"
  tags:
    - docker
  cache:
    paths:
      - "/home/.zypp-cache"
      - "$HOME/myrepo"
      - "$HOME/build/images/"
      - "$HOME/test-data"

## defaults:
variables:
  SRCREPO: "https://github.com/ImageMagick/ImageMagick"
  USE_COMMIT: "no"
  SPECNAME: harbour-imagemagick.spec
  YAMLNAME: harbour-imagemagick.yaml

#.build:
#  stage: build
#  allow_failure: false
#  rules:
#    - if: '$CI_COMMIT_MESSAGE =~ "Release"'
#      when: never
#    - changes:
#      - "rpm/*.yaml"
#      - "rpm/*.spec"
#      when: always
#  artifacts:
#    when: always
#    paths:
#      - "output/$SFOS_VERSION"
#      - "output/*.log"
#      - "output/*.spec"
#  before_script:
#    - export SRCURI="https://github.com/ImageMagick/ImageMagick"
#  script:
#    # get version string from yaml, replace last . with -
#    - export SRCVER=$(awk -F ":" '/Version/ {print $2}' rpm/$YAMLNAME | sed -r 's/(.*)\./\1-/')
#    - git clone --depth 1 --branch ${SRCVER} ${SRCURI} ~/build
#    - cp -rv rpm ~/build/
#    - cp -rv files ~/build/rpm/
#    - export OUTDIR=$CI_PROJECT_DIR/output
#    - 'if [[ -e $OUTDIR ]]; then rm -rf $OUTDIR; fi'
#    - mkdir -p $OUTDIR/$SFOS_VERSION
#    - pushd ~/build/
#    - if [[ $NEWSPEC = "yes" ]]; then specify --non-interactive --skip-scm --not-download -o rpm/$SPECNAME rpm/$YAMLNAME; else echo NEWSPEC is $NEWSPEC; fi
#    - mb2 -t SailfishOS-$SFOS_VERSION-$TARGET prepare | tee -a $OUTDIR/prepare.log
#    - cp -rv ~/build/rpm/$SPECNAME $OUTDIR/
#    - mb2 -t SailfishOS-$SFOS_VERSION-$TARGET build --enable-debug | tee -a $OUTDIR/build.log
#    - popd
#    - cp -rv ~/build/RPMS/* $OUTDIR/$SFOS_VERSION
#    - set > $OUTDIR/environment.log
#  after_script:
#    - rm -rf ~/build

include:
  - project: 'nephros/ci-templates'
    file: '/sfos/sfos-build-git-remote.yml'
  - https://gitlab.com/nobodyinperson/python3-openrepos-webclient/-/raw/v1.1.1/openrepos-upload-rpm.gitlab-ci.yml

build-arm:
  stage: build
  extends: .build-bin
  variables:
    TARGET: "armv7hl"
  before_script:
    - export SRCTAG=$(awk -F ":" '/Version/ {print $2}' rpm/$YAMLNAME | sed -r 's/(.*)\./\1-/')

build-arm64:
  stage: build
  extends: .build-bin
  variables:
    TARGET: "aarch64"
  before_script:
    - export SRCTAG=$(awk -F ":" '/Version/ {print $2}' rpm/$YAMLNAME | sed -r 's/(.*)\./\1-/')

build-x86:
  stage: build
  extends: .build-bin
  variables:
    TARGET: "i486"
  before_script:
    - export SRCTAG=$(awk -F ":" '/Version/ {print $2}' rpm/$YAMLNAME | sed -r 's/(.*)\./\1-/')

.test:
  stage: test
  allow_failure: true
  artifacts:
    when: always
    expire_in: 3 days
    paths:
      - "output/test.log"
      - "output/*_validation.log"
  before_script:
    - mkdir -p ~/myrepo
    - export OUTDIR=$CI_PROJECT_DIR/output
    - if [[ ! -e $OUTDIR ]] ; then mkdir $OUTDIR; fi
    - for f in $(find $OUTDIR/ -type f -name *.rpm); do cp -v ${f} ~/myrepo/; done
    - sudo zypper --non-interactive addrepo  ~/myrepo myrepo
    - sudo zypper --non-interactive modifyrepo --gpgcheck-allow-unsigned-package myrepo
    - sudo zypper --non-interactive refresh
    - sudo zypper --ignore-unknown --non-interactive install --allow-unsigned-rpm ImageMagick
    - sudo zypper --non-interactive install sdk-harbour-rpmvalidator
  script:
    - ./tests/test-ci.sh 2>&1 | tee $OUTDIR/test.log
    - 'RPV=$(rpm --eval %{_libexecdir}/sdk-harbour-rpmvalidator/rpmvalidation.sh)'
    - for f in $(find $OUTDIR -type f -name *.rpm); do echo checking $f ; $RPV -d 0 -c $f 2>&1 > $OUTDIR/${f##*/}_validation.log || continue ; done

test:
  extends: .test
  when: manual
  needs:
    - job: build-x86
      artifacts: true

testdummy-arm:
  extends: .test
  when: manual
  needs:
    - job: build-arm
  script:
    - "/bin/false"

testdummy-arm64:
  extends: .test
  when: manual
  needs:
    - job: build-arm64
  script:
    - "/bin/false"

###
# deploy
###
#

.openrepos-upload-rpm-base:
  extends: .openrepos-upload-rpm
  stage: deploy
  variables:
    OPENREPOS_USERNAME: nephros
    #OPENREPOS_PASSWORD: *** better define this via GitLab CI variables ***
    OPENREPOS_UPLOAD_RPM_APPNAME: ImageMagick
    # These are needed if your app doesn't exist yet on OpenRepos
    #OPENREPOS_UPLOAD_RPM_PLATFORM: SailfishOS    # or "Harmattan", etc...
    #OPENREPOS_UPLOAD_RPM_CATEGORY: Applications  # or "Libraries", etc...
  needs:
    #- auto-rebase
    - build-arm
    - build-x86
    - test
  dependencies:
    #- auto-rebase
    - build-arm
    - build-x86
    - test
  rules:
    - if: $CI_COMMIT_TAG
      when: manual
    - if: $CI_COMMIT_BRANCH == 'sfos-fixes' && '$CI_COMMIT_MESSAGE =~ "Release"'
      when: manual
  before_script:
    - |
      VER=$(awk -F ":" '/^Version: / {print $2}' rpm/$YAMLNAME | xargs echo)
      REL=$(awk -F ":" '/^Release: / {print $2}' rpm/$YAMLNAME | sed 's/%.*$//' | xargs echo)
      if [[ -e RPMS/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm ]]; then 
          cp -v RPMS/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm .
      else
          echo RPMS/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm not found
      fi
      if [[ -e $CI_PROJECT_DIR/output/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm ]] ; then
        cp -v $CI_PROJECT_DIR/output/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm . 
      else
        echo $CI_PROJECT_DIR/output/$SFOS_VERSION/youtube-dl-$VER-$REL.$TARGET.rpm not found 
      fi
      if [[ $( ls *rpm | wc -l ) -le 0 ]]; then
        echo  no rpms :/
        exit 1
      fi

openrepos-upload-rpm-arm:
  extends: .openrepos-upload-rpm-base
  stage: deploy
  variables:
    TARGET: armv7hl

openrepos-upload-rpm-x86:
  extends: .openrepos-upload-rpm-base
  stage: deploy
  variables:
    TARGET: i486

#####
# LOCAL BUILDER
#####

.test-local:
  image: "coderus/sailfishos-platform-sdk:${SFOS_VERSION}"
  tags:
    - docker
  cache:
    tag: $CI_JOB_NAME
    paths:
      - "/cache/zypp"
      - "$CI_PROJECT_DIR/myrepo"
  variables:
    SFOS_VERSION: 3.4.0.24
  script:
    - export ZYPP_CONF=$CI_PROJECT_DIR/.zypp.conf
    - sudo mkdir -p /cache/zypp
    - export OUTDIR=$CI_PROJECT_DIR/output
    ## test
    - mkdir -p $CI_PROJECT_DIR/myrepo
    - for f in $(find RPMS/$SFOS_VERSION -type f -name *.rpm); do cp -v ${f} $CI_PROJECT_DIR/myrepo/; done
    - sudo zypper --non-interactive addrepo  $CI_PROJECT_DIR/myrepo myrepo
    - sudo zypper --non-interactive modifyrepo --gpgcheck-allow-unsigned-package myrepo
    - sudo zypper --non-interactive refresh
    - sudo zypper --ignore-unknown --non-interactive install --allow-unsigned-rpm ImageMagick
    - ./tests/test-ci.sh 2>&1 | tee $OUTDIR/test.log

.build-local:
  image: "coderus/sailfishos-platform-sdk:$SFOS_VERSION"
  timeout: 1h 30m
  tags:
    - docker
    - $SFOS_VERSION
  cache:
    tag: ${CI_PROJECT_NAME}_${CI_JOB_NAME}
    paths:
      - "/cache/zypp"
      - "$CI_PROJECT_DIR/myrepo"
  script:
    - export SRCURI="https://github.com/ImageMagick/ImageMagick"
    - export ZYPP_CONF=$CI_PROJECT_DIR/.zypp.conf
    - sudo mkdir -p /cache/zypp
    # get version string from yaml, replace last . with -
    - export SRCVER=$(awk -F ":" '/Version/ {print $2}' rpm/$YAMLNAME | sed -r 's/(.*)\./\1-/')
    - export OUTDIR=$CI_PROJECT_DIR/output
    - git clone --depth 1 --branch ${SRCVER} ${SRCURI} ~/build
    - specify --non-interactive --skip-scm --not-download -o rpm/$SPECNAME rpm/$YAMLNAME
    - cp -rv rpm ~/build/
    - cp -rv files ~/build/rpm/
    - mkdir -p $OUTDIR/$SFOS_VERSION
    - pushd ~/build/
    - mb2 -t SailfishOS-$SFOS_VERSION-$TARGET prepare | tee -a $OUTDIR/prepare.log
    - cp -rv ~/build/rpm/$SPECNAME $OUTDIR/
    - mb2 -t SailfishOS-$SFOS_VERSION-$TARGET build --enable-debug | tee -a $OUTDIR/build.log
    - popd
    - cp -rv ~/build/RPMS/* $OUTDIR/$SFOS_VERSION
    - set > $OUTDIR/environment.log
    - rm -rf ~/build

